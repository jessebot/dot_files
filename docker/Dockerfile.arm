# onbaordme Debian Bookworm image - linux/arm64 only
FROM debian:bookworm-slim

# ""        - will install onboardme, but won't *run* onboardme
# "default" - installs onboardme, and runs onboardme with default dotfiles:
#             onboardme --no_upgrade
ARG RUN_MODE=""

# this makes debian not prompt for stuff
ENV DEBIAN_FRONTEND="noninteractive"

# install pre-req apt packages. The weird ones are for compiling stuff
# python3 defaults to python 3.11 in Debian Bookworm
RUN apt-get update && \
    apt list --upgradeable | grep security | cut -f1 -d '/' |\
    xargs apt-get install --no-install-recommends -y && \
    apt-get install -y --no-install-recommends \
    build-essential \
    file \
    curl \
    git \
    python3-pip \
    python3-dev \
    openssh-client \
    sudo \
    wget \
    unzip \
    cmake \
    ninja-build \
    gettext \
    pkg-config

# create default user
RUN useradd -m friend && \
    usermod -aG sudo friend && \
    echo 'friend ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers

WORKDIR /home/friend
USER friend

ENV HOME="/home/friend"

# make sure we can run locally installed executables
ENV PATH="$HOME/.local/bin:$PATH"

# for standardizing where configs/state are installed
ENV XDG_CONFIG_HOME="$HOME/.config"
ENV XDG_CACHE_HOME="$HOME/.cache"
ENV XDG_DATA_HOME="$HOME/.local/share"
ENV XDG_STATE_HOME="$HOME/.local/state"

# make python use our cache if the user wants to use XDG pathing
RUN export PYTHONPYCACHEPREFIX=$XDG_CACHE_HOME/python
# this isn't working via onboardme for some reason :(
# RUN if [ "$XDG" == "True" ]; then export PYTHONUSERBASE=$XDG_DATA_HOME/python; fi

# install onboardme - using python 3.11, default for Debian bookworm
RUN git config --global init.defaultBranch main && \
    pip install --user onboardme --break-system-packages && \
    onboardme --version

# this is for a cute fastfetch
COPY --chown=friend:friend ./config.conf /tmp/config.conf
# set some default dot files, just in case
COPY --chown=friend:friend ./arm_config/packages.yml /tmp/packages.yml
COPY --chown=friend:friend ./arm_config/config.yml /tmp/config.yml
COPY --chown=friend:friend ./arm_config/default-onboardme-install.sh /tmp/default-onboardme-install.sh

RUN if [ "$RUN_MODE" = "default" ]; then bash /tmp/default-onboardme-install.sh; fi

RUN sudo apt-get clean && \
    sudo pip cache purge && \
    sudo rm -rf /var/lib/apt/lists/* && \
    sudo rm -rf /tmp/*

ENTRYPOINT ["/bin/bash"]
